name: Build App

env:
  main_project_module: app
on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set Repository Name as Env Variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Hash as Env Variable
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Change Wrapper Permissions
        run: chmod +x ./gradlew

      - name: Write Signing Config
        if: ${{ github.ref_type == 'tag' }}
        run: |
            if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            cat << EOM >> app/build.gradle.kts
            val keystorePropertiesFile = rootProject.file("githubKeystore.properties")
            val keystoreProperties = Properties()
            keystoreProperties.load(FileInputStream(keystorePropertiesFile))
            
            android {
              signingConfigs {
                create("githubRelease") {
                  keyAlias = keystoreProperties["keyAlias"] as String
                  keyPassword = keystoreProperties["keyPassword"] as String
                  storeFile = file(keystoreProperties["storeFile"] as String)
                  storePassword = keystoreProperties["storePassword"] as String
                }
              }
  
              buildTypes {
                release {
                  signingConfig = signingConfigs.findByName("githubRelease")
                }
              }
            }
            EOM
            
            cat << EOM >> githubKeystore.properties
            storePassword=${{ secrets.KEYSTORE_PASSWORD }}
            keyAlias=${{ secrets.KEY_ALIAS }}
            keyPassword=${{ secrets.KEY_PASSWORD }}
            storeFile=../githubKeystore.jks
            EOM
            
            echo ${{ secrets.KEYSTORE }} | base64 -d > githubKeystore.jks
            fi

      - name: Build Gradle Project
        run: ./gradlew build

      - name: Build APK Release - ${{ env.main_project_module }} module
        if: ${{ github.ref_type == 'tag' }}
        run: ./gradlew assemble

      - name: Build AAB Release - ${{ env.main_project_module }} module
        if: ${{ github.ref_type == 'tag' }}
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      - name: Build APK Debug - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      - name: Build AAB Debug - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundle

      - name: Rename Release Output
        if: ${{ github.ref_type == 'tag' }}
        run: |
          mv ${{ env.main_project_module }}/build/outputs/apk/release/*.apk ${{ env.repository_name }}-${{ env.hash }}-release.apk
          mv ${{ env.main_project_module }}/build/outputs/bundle/release/*.aab ${{ env.repository_name }}-${{ env.hash }}-release.aab

      - name: Rename Debug Output
        run: |
            mv ${{ env.main_project_module }}/build/outputs/apk/debug/*.apk ${{ env.repository_name }}-${{ env.hash }}-debug.apk
            mv ${{ env.main_project_module }}/build/outputs/bundle/debug/*.aab ${{ env.repository_name }}-${{ env.hash }}-debug.aab

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref_type == 'tag' }}
        with:
          files: |
            ${{ env.repository_name }}-${{ env.hash }}-release.apk
            ${{ env.repository_name }}-${{ env.hash }}-release.aab

      - name: Upload APK Artifact - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ env.hash }}-APK
          path: ${{ env.repository_name }}-${{ env.hash }}-debug.apk

      - name: Upload AAB Artifact - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ env.hash }}-AAB
          path: ${{ env.repository_name }}-${{ env.hash }}-debug.aab
